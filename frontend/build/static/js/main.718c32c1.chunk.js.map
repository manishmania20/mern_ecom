{"version":3,"sources":["components/Header.js","components/Footer.js","components/Rating.js","components/Product.js","constants/productConstants.js","components/Loader.js","components/Message.js","screens/HomeScreen.js","actions/productActions.js","screens/ProductScreen.js","constants/cartConstants.js","actions/cartActions.js","screens/CartScreen.js","App.js","reportWebVitals.js","store.js","reducers/productReducers.js","reducers/cartReducers.js","index.js"],"names":["Header","Navbar","bg","variant","expand","collapseOnSelect","Container","to","Brand","Toggle","aria-controls","Collapse","id","Nav","className","Link","Footer","Row","Col","Rating","value","text","color","style","defaultProps","Product","product","Card","_id","Img","src","image","Body","Title","as","name","Text","rating","numReviews","price","PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","Loader","Spinner","animation","status","width","height","margin","display","Message","children","Alert","HomeScreen","dispatch","useDispatch","productList","useSelector","state","loading","products","error","useEffect","a","type","axios","get","data","payload","response","message","map","sm","md","lg","xl","ProductScreen","history","match","useState","qty","setQty","productDetails","params","Image","alt","fluid","ListGroup","Item","description","countInStock","Form","Control","onChange","e","target","Array","keys","x","Button","onClick","push","disabled","CART_ADD_ITEM","CART_REMOVE_ITEM","addToCart","getState","localStorage","setItem","JSON","stringify","cart","cartItems","CartScreen","location","productId","search","Number","split","removeFromCartHandler","removeFromCart","length","item","rounded","reduce","acc","toFixed","App","path","component","exact","ProductsScreen","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","reducer","combineReducers","action","reviews","existItem","find","filter","initialState","getItem","parse","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.718c32c1.chunk.js","sourcesContent":["import React from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Navbar, Nav, Container } from 'react-bootstrap'\r\n\r\nconst Header = () => {\r\n    return (\r\n        <header>\r\n           <Navbar bg=\"primary\" variant='dark' expand=\"lg\" collapseOnSelect>\r\n               <Container>\r\n                   <LinkContainer to='/'>\r\n                        <Navbar.Brand>GameNax</Navbar.Brand>\r\n                   </LinkContainer>\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                        <Nav className=\"ml-auto\">\r\n                            <LinkContainer to='/cart'>\r\n                                <Nav.Link><i className='fas fa-shopping-cart'></i> Cart</Nav.Link>\r\n                            </LinkContainer>\r\n                            <LinkContainer to='/login'>\r\n                                <Nav.Link><i className='fas fa-user'></i> Sign In</Nav.Link>\r\n                            </LinkContainer>\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </Container>\r\n            </Navbar>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer>\r\n            <Container>\r\n                <Row>\r\n                    <Col className='text-center py-3'>\r\n                        Copyright &copy; GameNax\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Rating = ({ value, text, color }) => {\r\n    return (\r\n        <div className='rating'>\r\n            <span>\r\n                <i style={{color}} className={value >= 1 ? 'fas fa-star' : \r\n                              value >= 0.5 ? 'fas fa-star-half-alt' : \r\n                              'far fa-star'}>\r\n                </i>\r\n            </span>\r\n\r\n            <span>\r\n                <i style={{color}} className={value >= 2 ? 'fas fa-star' : \r\n                              value >= 1.5 ? 'fas fa-star-half-alt' : \r\n                              'far fa-star'}>\r\n                </i>\r\n            </span>\r\n\r\n            <span>\r\n                <i style={{color}} className={value >= 3 ? 'fas fa-star' : \r\n                              value >= 2.5 ? 'fas fa-star-half-alt' : \r\n                              'far fa-star'}>\r\n                </i>\r\n            </span>\r\n\r\n            <span>\r\n                <i style={{color}} className={value >= 4 ? 'fas fa-star' : \r\n                              value >= 3.5 ? 'fas fa-star-half-alt' : \r\n                              'far fa-star'}>\r\n                </i>\r\n            </span>\r\n\r\n            <span>\r\n                <i style={{color}} className={value >= 5 ? 'fas fa-star' : \r\n                              value >= 4.5 ? 'fas fa-star-half-alt' : \r\n                              'far fa-star'}>\r\n                </i>\r\n            </span>\r\n                <span>{text && text}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nRating.defaultProps = {\r\n    color: '#fc6a03',\r\n}\r\n\r\nRating.propTypes = {\r\n    value: PropTypes.number.isRequired,\r\n    text: PropTypes.string.isRequired,\r\n    color: PropTypes.string\r\n}\r\n\r\nexport default Rating\r\n","import React from 'react'\r\nimport { Card } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport Rating from './Rating'\r\n\r\nconst Product = ({ product }) => {\r\n    return (\r\n        <Card className='my-3 p-3 rounded'>\r\n           <Link to={`/product/${product._id}`}>\r\n               <Card.Img src={product.image} variant='top' /> \r\n           </Link> \r\n\r\n           <Card.Body>\r\n               <Link to={`/product/${product._id}`}>\r\n                   <Card.Title as='div'>\r\n                       <strong>{product.name}</strong>\r\n                   </Card.Title>\r\n               </Link>\r\n\r\n               <Card.Text as='div'>\r\n                   <Rating value={product.rating} text={`${product.numReviews} reviews`} />\r\n               </Card.Text>\r\n            \r\n               <Card.Text as='h3'>\r\n                   ${product.price}\r\n               </Card.Text>\r\n           </Card.Body>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default Product\r\n","export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST'\r\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS'\r\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL'\r\n\r\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST'\r\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS'\r\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL'","import React from 'react'\r\nimport { Spinner } from 'react-bootstrap'\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <Spinner animation='border' status='role' variant='light' style={{ \r\n            width: '100px',\r\n            height: '100px',\r\n            margin: 'auto',\r\n            display: 'block'\r\n         }}>\r\n            <span className='sr-only'>Loading...</span>\r\n        </Spinner>\r\n    )\r\n}\r\n\r\nexport default Loader\r\n","import React from 'react'\r\nimport { Alert } from 'react-bootstrap'\r\n\r\nconst Message = ({ variant, children }) => {\r\n    return (\r\n        <Alert variant={variant}>\r\n            {children}\r\n        </Alert>\r\n    )\r\n}\r\n\r\nMessage.defaultProps = {\r\n    variant: 'info',\r\n}\r\n\r\nexport default Message\r\n","import React, { useEffect } from 'react'\r\nimport { Row, Col } from 'react-bootstrap'\r\nimport Product from '../components/Product'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { listProducts } from '../actions/productActions'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\n\r\n\r\nconst HomeScreen = () => {\r\n    const dispatch = useDispatch()\r\n    const productList = useSelector(state => state.productList)\r\n    const { loading, products, error } = productList\r\n\r\n    useEffect(() => {\r\n      dispatch(listProducts())\r\n    }, [dispatch])\r\n\r\n\r\n    return (\r\n        <>\r\n            <h1>Latest and Upcoming Games</h1>\r\n            { loading ? ( <Loader /> ) : error ? ( <Message variant='danger'>{error}</Message> ) :\r\n             (<Row>\r\n                {products.map((product) => (\r\n                    <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n                        <Product product={product} />\r\n                    </Col>\r\n                ) )}\r\n            </Row> ) \r\n            }\r\n            \r\n        </>\r\n    )\r\n}\r\n\r\nexport default HomeScreen\r\n","import { PRODUCT_LIST_SUCCESS, PRODUCT_LIST_REQUEST, PRODUCT_LIST_FAIL, \r\n            PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_SUCCESS, PRODUCT_DETAILS_FAIL }\r\n             from '../constants/productConstants'\r\nimport axios from 'axios'\r\n\r\nexport const listProducts = () => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_LIST_REQUEST })\r\n\r\n        const { data } = await axios.get('/api/products')\r\n\r\n        dispatch({ \r\n            type: PRODUCT_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_LIST_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n        \r\n    }\r\n}\r\n\r\n\r\nexport const listProductDetails = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_DETAILS_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/products/${id}`)\r\n\r\n        dispatch({ \r\n            type: PRODUCT_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n        \r\n    }\r\n}","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Row, Col, Image, ListGroup, Card, Button, Form } from 'react-bootstrap'\r\nimport Rating from '../components/Rating'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { listProductDetails } from '../actions/productActions'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\n\r\n\r\nconst ProductScreen = ({ history, match }) => {\r\n    const [qty, setQty] = useState(1)\r\n\r\n    const dispatch = useDispatch()\r\n    const productDetails = useSelector(state => state.productDetails)\r\n    const { loading, product, error } = productDetails\r\n\r\n    useEffect(() => {\r\n       dispatch(listProductDetails(match.params.id))\r\n    }, [dispatch, match])\r\n\r\n    const addToCartHandler = () => {\r\n        history.push(`/cart/${match.params.id}?qty=${qty}`)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Link className='btn btn-light my-3' to='/'>Go Back</Link>\r\n            { loading ? ( <Loader /> ) : error ? ( <Message variant='danger'>{error}</Message> ) : \r\n            ( <Row>\r\n                <Col md={6}>\r\n                    <Image src={product.image} alt={product.name} fluid />\r\n                </Col>\r\n                <Col md={3}>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h3>{product.name}</h3>\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <Rating value={product.rating} text={`${product.numReviews} reviews`} />\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            Price: ${product.price}\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            Description: {product.description}\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Col>\r\n                <Col md={3}>\r\n                    <Card>\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>\r\n                                        Price:\r\n                                    </Col>\r\n                                    <Col>\r\n                                        <strong>${product.price}</strong>\r\n                                    </Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>\r\n                                        Status:\r\n                                    </Col>\r\n                                    <Col>\r\n                                        {product.countInStock > 0 ? 'In Stock' : 'Out Of Stock'}\r\n                                    </Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            {product.countInStock > 0 && (\r\n                                <ListGroup.Item>\r\n                                    <Row>\r\n                                        <Col>\r\n                                            Qty:\r\n                                        </Col>\r\n                                        <Col>\r\n                                            <Form.Control as='select' value={qty} onChange={ (e) => \r\n                                            setQty(e.target.value) }>\r\n                                                {\r\n                                                    [...Array(product.countInStock).keys()].map( (x) => (\r\n                                                        <option key={x + 1} value={x + 1} >\r\n                                                            {x + 1}\r\n                                                        </option>\r\n                                                    ))\r\n                                                }\r\n                                            </Form.Control>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </ListGroup.Item>\r\n                            )}\r\n\r\n                            <ListGroup.Item>\r\n                                <Button onClick={addToCartHandler} className='btn-block' type='button' disabled={product.countInStock === 0}>\r\n                                    Add To Cart\r\n                                </Button>\r\n                            </ListGroup.Item>\r\n                        </ListGroup>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n            )\r\n            }\r\n            \r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProductScreen\r\n","export const CART_ADD_ITEM = 'CART_ADD_ITEM'\r\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM'","import axios from 'axios'\r\nimport { CART_ADD_ITEM, CART_REMOVE_ITEM } from '../constants/cartConstants'\r\n\r\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\r\n    const { data } = await axios.get(`/api/products/${id}`)\r\n\r\n    dispatch({\r\n        type: CART_ADD_ITEM,\r\n        payload: {\r\n            product: data._id,\r\n            name: data.name,\r\n            image: data.image,\r\n            price: data.price,\r\n            countInStock: data.countInStock,\r\n            qty,\r\n        },\r\n    })\r\n\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\n\r\nexport const removeFromCart = (id) => (dispatch, getState) => {\r\n    dispatch({\r\n        type: CART_REMOVE_ITEM,\r\n        payload: id,\r\n    })\r\n\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { Link } from 'react-router-dom'\r\nimport { Row, Col, ListGroup, Button, Form, Image, Card } from 'react-bootstrap'\r\nimport { addToCart, removeFromCart } from '../actions/cartActions'\r\n\r\nconst CartScreen = ({ match, location, history }) => {\r\n    const productId = match.params.id\r\n\r\n    const qty = location.search ? Number(location.search.split('=')[1]) : 1\r\n\r\n    const dispatch = useDispatch()\r\n    const cart = useSelector(state => state.cart)\r\n    const { cartItems } = cart\r\n\r\n    \r\n\r\n    useEffect(() => {\r\n        if(productId){\r\n            dispatch(addToCart(productId, qty))\r\n        }\r\n    }, [dispatch, productId, qty])\r\n\r\n    const removeFromCartHandler = (id) => {\r\n        //console.log('remove')\r\n        dispatch(removeFromCart(id))\r\n    }\r\n\r\n    const checkoutHandler = () => {\r\n        history.push('/login?redirect=shipping')\r\n    }\r\n\r\n    return (\r\n        <Row>\r\n            <Col md={8}>\r\n                <h1>GameNax Cart</h1>\r\n                {cartItems.length === 0 ? \r\n                    <Message>Your cart seems empty 🙁 <Link to='/'>Go Back</Link></Message> :\r\n                     (\r\n                    <ListGroup variant='flush'>\r\n                        {cartItems.map((item) => (\r\n                            <ListGroup.Item key={item.product}>\r\n                                <Row>\r\n                                    <Col md={2}>\r\n                                        <Image src={item.image} alt={item.name} fluid rounded />\r\n                                    </Col>\r\n                                    <Col md={3}>\r\n                                        <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                    </Col>\r\n                                    <Col md={2}>\r\n                                        ${item.price}\r\n                                    </Col>\r\n                                    <Col md={2}>\r\n                                        <Form.Control as='select' value={item.qty} onChange={ (e) => \r\n                                            dispatch(addToCart(item.product, Number(e.target.value))) }>\r\n                                                {\r\n                                                    [...Array(item.countInStock).keys()].map( (x) => (\r\n                                                        <option key={x + 1} value={x + 1} >\r\n                                                            {x + 1}\r\n                                                        </option>\r\n                                                    ))\r\n                                                }\r\n                                        </Form.Control>\r\n                                    </Col>\r\n                                    <Col md={2}>\r\n                                        <Button type='button' variant='light' onClick={() => {\r\n                                            removeFromCartHandler(item.product)\r\n                                        }}>\r\n                                            <i className='fas fa-trash'></i>\r\n                                        </Button>\r\n                                    </Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                        ))}\r\n                    </ListGroup>\r\n                     )}\r\n            </Col>\r\n            <Col md={4}>\r\n                <Card>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)}) items</h2>\r\n                            ${cartItems.reduce((acc, item) => acc + item.qty * item.price, 0).toFixed(2)}\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <Button type='button' className='btn-block' disabled={cartItems.length === 0}\r\n                            onClick={checkoutHandler}>\r\n                                Place Your Order\r\n                            </Button>\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Card>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default CartScreen\r\n","import React from 'react'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport { Container } from 'react-bootstrap'\nimport Header from './components/Header'\nimport Footer from './components/Footer'\nimport HomeScreen from './screens/HomeScreen'\nimport ProductsScreen from './screens/ProductScreen'\nimport CartScreen from './screens/CartScreen'\n\nconst App = () => {\n  return (\n    <Router>\n      <Header />\n      <main className='py-3'>\n        <Container>\n          <Route path='/' component={HomeScreen} exact />\n          <Route path='/product/:id' component={ProductsScreen} />\n          <Route path='/cart/:id?' component={CartScreen} />\n        </Container>\n      </main>\n      <Footer />\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createStore, applyMiddleware, combineReducers } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport { productListReducer, productDetailsReducer } from './reducers/productReducers'\r\nimport {cartReducer} from './reducers/cartReducers'\r\n\r\nconst reducer = combineReducers({\r\n    productList: productListReducer,\r\n    productDetails: productDetailsReducer,\r\n    cart: cartReducer,\r\n})\r\n\r\n\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? \r\n    JSON.parse(localStorage.getItem('cartItems')) :\r\n    []\r\n\r\nconst initialState = {\r\n    cart: { cartItems: cartItemsFromStorage }\r\n}\r\n\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)))\r\n\r\nexport default store","import { PRODUCT_LIST_SUCCESS, PRODUCT_LIST_REQUEST, PRODUCT_LIST_FAIL,\r\n     PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_SUCCESS, PRODUCT_DETAILS_FAIL }\r\n      from '../constants/productConstants'\r\n\r\nexport const productListReducer = (state = { products: [] } , action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_LIST_REQUEST:\r\n            return { loading: true, products: [] }\r\n        case PRODUCT_LIST_SUCCESS:\r\n            return { loading: false, products: action.payload }\r\n        case PRODUCT_LIST_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productDetailsReducer = (state = { product: { reviews: [] } } , action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_DETAILS_REQUEST:\r\n            return { loading: true, ...state }\r\n        case PRODUCT_DETAILS_SUCCESS:\r\n            return { loading: false, product: action.payload }\r\n        case PRODUCT_DETAILS_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}","import { CART_ADD_ITEM, CART_REMOVE_ITEM } from '../constants/cartConstants'\r\n\r\nexport const cartReducer = (state = { cartItems: [] }, action) => {\r\n    switch (action.type) {\r\n        case CART_ADD_ITEM:\r\n            const item = action.payload\r\n\r\n            const existItem = state.cartItems.find((x) => x.product === item.product)\r\n\r\n            if (existItem){\r\n                return{\r\n                    ...state,\r\n                    cartItems: state.cartItems.map((x) =>\r\n                    x.product === existItem.product ? item : x),\r\n                }\r\n            }\r\n            else{\r\n                return{\r\n                    ...state,\r\n                    cartItems: [...state.cartItems, item]\r\n                }\r\n            }\r\n\r\n        case CART_REMOVE_ITEM:\r\n            return{\r\n                ...state,\r\n                cartItems: state.cartItems.filter((x) => x.product !== action.payload)\r\n            }\r\n    \r\n        default:\r\n            return state\r\n    }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './bootstrap.min.css';\nimport './index.css'\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}